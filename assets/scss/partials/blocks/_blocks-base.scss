/* ----- Block Layout Styles -------------------- */
.entry-content > * {
     margin: $block-margin 0;
     max-width: 100%;

     > *:first-child {
          margin-top: 0;
     }

     > *:last-child {
          margin-bottom: 0;
     }

     &.alignwide {
          margin: $block-margin calc(25% - 25vw);
          max-width: 100vw;
          width: auto;
     }

     &.alignfull {
          margin: $block-margin calc(50% - 50vw);
          max-width: 100vw;
          width: 100vw;
     }

}

.content-sidebar .entry-content > *,
.sidebar-content .entry-content > * {

     &.alignwide,
     &.alignfull {
          margin: $block-margin 0;
          max-width: 100%;
          width: auto;
     }

}

/* Post title width */
.editor-post-title__block.wp-block {
	max-width: $base-width;

	/* Post title styling */
	.editor-post-title__input {
	}
}

/* Main column width */
.wp-block {
    max-width: $base-width;

	/* Wide column width */
	&[data-align="wide"] {
		max-width: none;
	}

	/* Full column width */
	&[data-align="full"] {
		max-width: none;
	}
}

/* ----- Buttons -------------------- */
.wp-block-button__link,
a.wd-button {
	@extend %button-styles;

	&:not(.has-text-color) {
		color: white;

		&:hover {
			color: white;
		}
	}

	&:not(.has-background) {
		$default: nth( nth( $colors, 1 ), 2 ); // first color in $colors array
		background-color: $default;

		&:hover,
		&:focus {
			background-color: darken( $default, 10% );
               border: 2px solid darken( $default, 10% );
		}
	}

	@each $name, $color in $colors {

		&.has-#{$name}-color:hover,
		&.has-#{$name}-color:focus {
			color: $color;
		}

          &.has-#{$name}-background-color,
		&.has-#{$name}-background-color {
			background-color: $color;
               border: 2px solid $color;

               &:hover,
               &:focus {
                    background-color: darken( $color, 10% );
                    border: 2px solid darken( $color, 10% );
               }
		}
	}

}

.is-style-inverse .wp-block-button__link,
a.wd-button--inverse {

     &:not(.has-text-color) {
          $default: nth( nth( $colors, 1 ), 2 ); // first color in $colors array
          color: $default;

          &:hover {
               color: white;
          }
     }

     &:not(.has-background) {
          $default: nth( nth( $colors, 1 ), 2 ); // first color in $colors array
          background-color: transparent;

          &:hover,
          &:focus {
               background-color: darken( $default, 10% );
               border: 2px solid darken( $default, 10% );
          }
     }

     @each $name, $color in $colors {

          &.has-#{$name}-color,
          &.has-#{$name}-color {
               color: $color;

               &:hover,
               &:focus {
                    color: $white !important;
               }
          }

          &.has-#{$name}-background-color,
          &.has-#{$name}-background-color {
               background-color: transparent !important; // need important to override gutenberg inline styles
               border: 2px solid $color;

               &:hover,
               &:focus {
                    background-color: $color !important;
                    border: 2px solid $color;
               }
          }
     }
}

/* ----- Front End Colors to Match Color Picker in Block Editor -------------------- */
@each $name, $color in $colors {

	.has-#{$name}-color {
		color: $color;
	}

	.has-#{$name}-background-color {
		background-color: $color;
	}
}
